name: Build & Release Sentinel

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Install Node.js dependencies
        run: |
          cd web-ui
          npm install

      - name: Build executable
        run: |
          python build_exe.py

      - name: Rename binary for OS
        run: |
          mkdir upload
          if [ "$RUNNER_OS" = "Windows" ]; then mv dist/main.exe upload/Sentinel-Windows.exe; fi
          if [ "$RUNNER_OS" = "Linux" ]; then mv dist/main upload/Sentinel-Linux; fi
          if [ "$RUNNER_OS" = "macOS" ]; then mv dist/main upload/Sentinel-macOS; fi
        shell: bash

      - name: Create installers
        run: |
          if [ "$RUNNER_OS" = "Windows" ]; then
            python scripts/create_installers.py
            if [ -f "Sentinel-Voice-1.0.1.msi" ]; then
              mv Sentinel-Voice-1.0.1.msi upload/
            fi
          elif [ "$RUNNER_OS" = "macOS" ]; then
            python scripts/create_installers.py
            if [ -f "Sentinel-Voice-1.0.1.dmg" ]; then
              mv Sentinel-Voice-1.0.1.dmg upload/
            fi
          elif [ "$RUNNER_OS" = "Linux" ]; then
            python scripts/create_installers.py
            if [ -f "sentinel-voice_1.0.1_amd64.deb" ]; then
              mv sentinel-voice_1.0.1_amd64.deb upload/
            fi
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Sentinel-${{ runner.os }}
          path: upload/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate changelog
        id: changelog
        run: |
          # Récupérer le tag actuel
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          
          # Générer le changelog depuis les commits
          CHANGELOG=$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.changelog.outputs.tag_name }}
          name: Sentinel Voice ${{ steps.changelog.outputs.tag_name }}
          body: |
            ## 🚀 Nouvelle version de Sentinel Voice
            
            ### 📋 Changelog
            ${{ steps.changelog.outputs.changelog }}
            
            ### 📥 Téléchargements
            
            #### Exécutables
            - **Windows** : Sentinel-Windows.exe
            - **Mac** : Sentinel-macOS
            - **Linux** : Sentinel-Linux
            
            #### Packages d'installation
            - **Windows** : Sentinel-Voice-1.0.1.msi (installateur)
            - **Mac** : Sentinel-Voice-1.0.1.dmg (image disque)
            - **Linux** : sentinel-voice_1.0.1_amd64.deb (package Debian)
            
            ### 🔧 Installation
            1. **Exécutable** : Téléchargez et lancez directement
            2. **Package** : Utilisez l'installateur pour une installation système
            
            ### 📖 Documentation
            Consultez le [README](https://github.com/hassan312-god/Sentinel) pour plus d'informations.
            
            ### 📊 Métriques
            - ⭐ Étoiles GitHub : [![Stars](https://img.shields.io/github/stars/hassan312-god/Sentinel)](https://github.com/hassan312-god/Sentinel/stargazers)
            - 📥 Téléchargements : [![Downloads](https://img.shields.io/github/downloads/hassan312-god/Sentinel/total)](https://github.com/hassan312-god/Sentinel/releases)
          files: ./artifacts/**/*.exe
          files: ./artifacts/**/Sentinel-*
          files: ./artifacts/**/*.msi
          files: ./artifacts/**/*.dmg
          files: ./artifacts/**/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  metrics:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Update download metrics
        run: |
          echo "📊 Métriques mises à jour pour la release ${{ github.ref_name }}"
          echo "Les badges de téléchargement se mettront à jour automatiquement" 